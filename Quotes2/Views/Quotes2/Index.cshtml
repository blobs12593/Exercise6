@model IEnumerable<Quotes2.Models.Quotation>
@using GridMvc.Html;
@using Quotes2.Models;

@{
    ViewBag.Title = "Quotes";
}

@*Being navbar*@
<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a href="../" class="navbar-brand">Quote Master</a>
        </div>
        <div class="navbar-collapse collapse">
            <ul class="nav navbar-nav">
                <li><a href="../" id="home">Home</a></li>
                <li>@Html.ActionLink("Quotes", "Index")</li>
                <li>@Html.ActionLink("Create", "Create")</li>
            </ul>
            @*Login Part*@
            @using Microsoft.AspNet.Identity
            @if (Request.IsAuthenticated)
            {
                using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
                {
                    @Html.AntiForgeryToken()

                    <ul class="nav navbar-nav navbar-right">
                        <li>
                            @Html.ActionLink("Hello " + User.Identity.GetUserName() + "!", "Manage", "Account", routeValues: null, htmlAttributes: new { title = "Manage" })
                        </li>
                        <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
                    </ul>
                }
            }
            else
            {
                <ul class="nav navbar-nav navbar-right">
                    <li>@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
                    <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
                </ul>
            }
        </div>
    </div>
</div>
@*End navbar*@

<h2>Quotes</h2>

<p>
    @if ((System.Web.HttpContext.Current.User != null) && System.Web.HttpContext.Current.User.Identity.IsAuthenticated)
    {
        @Html.ActionLink("Create New", "Create")
        using (Html.BeginForm())
        {
            <input type="submit" value="View My Quotes" class="btn btn-default" name="viewMine" />
        }
    }
</p>
<p>
    @if (User.IsInRole("Admin"))
    {
        using (Html.BeginForm())
        {
            var myContext = new ApplicationDbContext();
            var users = myContext.Users.ToList();
            List<string> userNames = new List<string>();
            foreach (var user in users)
            {
                userNames.Add(user.UserName);
            }
            SelectList list = new SelectList(userNames);
            @Html.DropDownList("FindUserQuotes", list, "-- Select User --")
            <input type="submit" value="Find User Quotes" class="btn btn-default" name="findThatUser" />
        }
    }
    @using (Html.BeginForm())
    {
        @Html.TextBox("Search")
        <input type="submit" value="Search" class="btn btn-default" name="doNotAddID" />
    }

    @using (Html.BeginForm())
    {
        if(ViewBag.ClearSearch)
        {
            <input type="submit" value="Clear Search" class="btn btn-default" name="doNotAddID" />
        }
    }

    @using (Html.BeginForm())
    {
        if (ViewBag.Cookie)
        {
            <input type="submit" value="Unhide All" class="btn btn-default" name="delete" />
        }
    }
</p>
@if (!User.IsInRole("Admin") && ViewBag.MyQuotes == false)
{
    @Html.Grid(Model).Columns(columns =>
    {
        columns.Add(model => model.Quote).Titled("Quote").SetWidth(200);
        columns.Add(model => model.Author).Titled("Author")
            .SetWidth(5)
            .Sortable(true);
        columns.Add(model => model.Date.Date).Titled("Date")
            .SetWidth(5)
            .Format("{0:MM/dd/yyyy}")
            .Sortable(true);
        columns.Add(model => model.Category.Name).Titled("Category")
            .SetWidth(5)
            .Sortable(true);
        columns.Add().SetWidth(5)
            .RenderValueAs(model => @Html.ActionLink("Hide", "Index", new { id = model.QuotationID }));
    }).WithPaging(20)
}
@if (User.IsInRole("Admin") || (!User.IsInRole("Admin") && ViewBag.MyQuotes == true))
{
    @Html.Grid(Model).Columns(columns =>
    {
        columns.Add(model => model.Quote).Titled("Quote").SetWidth(200);
        columns.Add(model => model.Author).Titled("Author")
            .SetWidth(5)
            .Sortable(true);
        columns.Add(model => model.Date.Date).Titled("Date")
            .SetWidth(5)
            .Format("{0:MM/dd/yyyy}")
            .Sortable(true);
        columns.Add(model => model.Category.Name).Titled("Category")
            .SetWidth(5)
            .Sortable(true);
        columns.Add().SetWidth(5)
            .RenderValueAs(model => @Html.ActionLink("Hide", "Index", new { id = model.QuotationID }));
        columns.Add().SetWidth(5)
            .RenderValueAs(model => @Html.ActionLink("Edit", "Edit", new { id = model.QuotationID }));
        columns.Add().SetWidth(5)
            .RenderValueAs(model => @Html.ActionLink("Details", "Details", new { id = model.QuotationID }));
        columns.Add().SetWidth(5)
            .RenderValueAs(model => @Html.ActionLink("Delete", "Delete", new { id = model.QuotationID }));
    }).WithPaging(20)
}